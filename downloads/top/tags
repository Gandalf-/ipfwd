!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BETA	patchlevel.h	2;"	d
Buffersize	top.c	60;"	d	file:
CMD_OSLIMIT	top.c	201;"	d	file:
CMD_delay	top.c	205;"	d	file:
CMD_displays	top.c	206;"	d	file:
CMD_errors	top.c	202;"	d	file:
CMD_help1	top.c	199;"	d	file:
CMD_help2	top.c	200;"	d	file:
CMD_idletog	top.c	209;"	d	file:
CMD_idletog2	top.c	210;"	d	file:
CMD_jail	top.c	221;"	d	file:
CMD_jidtog	top.c	218;"	d	file:
CMD_kidletog	top.c	219;"	d	file:
CMD_kill	top.c	207;"	d	file:
CMD_number1	top.c	203;"	d	file:
CMD_number2	top.c	204;"	d	file:
CMD_order	top.c	223;"	d	file:
CMD_pcputog	top.c	220;"	d	file:
CMD_quit	top.c	198;"	d	file:
CMD_redraw	top.c	196;"	d	file:
CMD_renice	top.c	208;"	d	file:
CMD_selftog	top.c	212;"	d	file:
CMD_showargs	top.c	217;"	d	file:
CMD_thrtog	top.c	213;"	d	file:
CMD_update	top.c	197;"	d	file:
CMD_user	top.c	211;"	d	file:
CMD_viewsys	top.c	215;"	d	file:
CMD_viewtog	top.c	214;"	d	file:
CMD_wcputog	top.c	216;"	d	file:
COMMANDS_H	commands.h	15;"	d
CONVERT	machine.c	1638;"	d	file:
DISP_CPU	top.h	/^enum displaymodes { DISP_CPU = 0, DISP_IO, DISP_MAX };$/;"	e	enum:displaymodes
DISP_IO	top.h	/^enum displaymodes { DISP_CPU = 0, DISP_IO, DISP_MAX };$/;"	e	enum:displaymodes
DISP_MAX	top.h	/^enum displaymodes { DISP_CPU = 0, DISP_IO, DISP_MAX };$/;"	e	enum:displaymodes
EOF	getopt.c	29;"	d	file:
ERASE	display.c	/^static enum { OFF, ON, ERASE } header_status = ON;$/;"	e	enum:__anon1	file:
ERR	getopt.c	31;"	d	file:
ERRMAX	commands.c	179;"	d	file:
ERROR	commands.c	195;"	d	file:
ERR_RESET	commands.c	194;"	d	file:
FD_SET	top.c	186;"	d	file:
FD_ZERO	top.c	185;"	d	file:
FIXED_LOADAVG	loadavg.h	30;"	d
FIXED_LOADAVG	loadavg.h	35;"	d
FIXED_PCTCPU	loadavg.h	31;"	d
FIXED_PCTCPU	loadavg.h	36;"	d
FIXED_PCTCPU	loadavg.h	37;"	d
FMT_SHOWARGS	top.h	48;"	d
FSCALE	loadavg.h	25;"	d
GETSYSCTL	machine.c	57;"	d	file:
Header_lines	display.c	/^int  Header_lines =	7;$/;"	v
Infinity	top.h	31;"	d
Invalid	top.h	32;"	d
LOG1024	top.h	23;"	d
Largest	top.h	35;"	d
MACHINE_H	machine.h	11;"	d
MAX_COLS	top.h	20;"	d
MT_delayed	display.h	6;"	d
MT_standout	display.h	5;"	d
Maybe	boolean.h	4;"	d
Move_to	screen.h	10;"	d
NOPROC	machine.c	596;"	d	file:
NULL	getopt.c	26;"	d	file:
NUM_AVERAGES	top.h	41;"	d
NUM_STRINGS	utils.c	444;"	d	file:
No	boolean.h	2;"	d
OFF	display.c	/^static enum { OFF, ON, ERASE } header_status = ON;$/;"	e	enum:__anon1	file:
ON	display.c	/^static enum { OFF, ON, ERASE } header_status = ON;$/;"	e	enum:__anon1	file:
ORDERKEY_CPTICKS	machine.c	1292;"	d	file:
ORDERKEY_JID	machine.c	1328;"	d	file:
ORDERKEY_MEM	machine.c	1322;"	d	file:
ORDERKEY_PCTCPU	machine.c	1281;"	d	file:
ORDERKEY_PRIO	machine.c	1304;"	d	file:
ORDERKEY_RSSIZE	machine.c	1316;"	d	file:
ORDERKEY_STATE	machine.c	1298;"	d	file:
ORDERKEY_SWAP	machine.c	1334;"	d	file:
ORDERKEY_THREADS	machine.c	1310;"	d	file:
PATCHLEVEL	patchlevel.h	1;"	d
PC	screen.c	/^char PC;$/;"	v
PCTCPU	machine.c	101;"	d	file:
PROCSIZE	machine.c	95;"	d	file:
P_ACTIVE	machine.h	/^    int    P_ACTIVE;     \/* number of procs considered "active" *\/$/;"	m	struct:system_info
P_ACTIVE	machine.h	36;"	d
P_ACTIVE	machine.h	38;"	d
RU	machine.c	97;"	d	file:
RUTOT	machine.c	98;"	d	file:
SGTTY	screen.c	29;"	d	file:
SMPUNAMELEN	machine.c	58;"	d	file:
STDERR	screen.c	96;"	d	file:
STDIN	screen.c	94;"	d	file:
STDOUT	screen.c	95;"	d	file:
STRMAX	commands.c	212;"	d	file:
SYS_ERRLIST_DECLARED	os.h	35;"	d
SYS_ERRLIST_DECLARED	utils.c	342;"	d	file:
Smask	top.c	66;"	d	file:
TAB3	screen.c	42;"	d	file:
TAB3	screen.c	44;"	d	file:
TCputs	screen.h	8;"	d
TERMIO	screen.c	32;"	d	file:
TERMIOS	screen.c	35;"	d	file:
TOP_H	top.h	11;"	d
TOP_JID_LEN	machine.c	71;"	d	file:
TOP_SWAP_LEN	machine.c	72;"	d	file:
UPUNAMELEN	machine.c	59;"	d	file:
USERNAME_H	username.h	15;"	d
VERSION	top.h	14;"	d
Yes	boolean.h	3;"	d
arc	machine.h	/^    int    *arc;$/;"	m	struct:system_info
arc_buffer	display.c	/^char arc_buffer[MAX_COLS];$/;"	v
arc_enabled	machine.c	/^static int arc_enabled;$/;"	v	file:
arc_names	display.c	/^static char **arc_names;$/;"	v	file:
arc_names	machine.h	/^    char **arc_names;$/;"	m	struct:statics
arc_stats	machine.c	/^int arc_stats[7];$/;"	v
arcnames	machine.c	/^char *arcnames[] = {$/;"	v
arg	commands.c	/^    char *arg;		\/* argument that caused the error *\/$/;"	m	struct:errs	file:
argparse	utils.c	/^char **argparse(line, cntp)$/;"	f
atoiwi	utils.c	/^int atoiwi(str)$/;"	f
boottime	machine.h	/^    struct timeval boottime;$/;"	m	struct:system_info	typeref:struct:system_info::timeval
ccpu	machine.c	/^static load_avg  ccpu;$/;"	v	file:
ch_erase	screen.c	/^char ch_erase;$/;"	v
ch_kill	screen.c	/^char ch_kill;$/;"	v
clear	screen.c	/^clear()$/;"	f
clear_eol	screen.c	/^clear_eol(len)$/;"	f
clear_line	screen.c	/^char *clear_line;$/;"	v
clear_message	display.c	/^clear_message()$/;"	f
clear_screen	screen.c	/^char *clear_screen;$/;"	v
clear_to_end	screen.c	/^char *clear_to_end;$/;"	v
cmdlengthdelta	machine.c	/^static int cmdlengthdelta;$/;"	v	file:
command	machine.h	/^    char *command;	\/* only this command (unless == NULL) *\/$/;"	m	struct:process_select
compare_cpu	machine.c	/^compare_cpu(void *arg1, void *arg2)$/;"	f
compare_iofault	machine.c	/^compare_iofault(void *arg1, void *arg2)$/;"	f
compare_ioread	machine.c	/^compare_ioread(void *arg1, void *arg2)$/;"	f
compare_iototal	machine.c	/^compare_iototal(void *arg1, void *arg2)$/;"	f
compare_iowrite	machine.c	/^compare_iowrite(void *arg1, void *arg2)$/;"	f
compare_ivcsw	machine.c	/^compare_ivcsw(void *arg1, void *arg2)$/;"	f
compare_jid	machine.c	/^compare_jid(const void *arg1, const void *arg2)$/;"	f	file:
compare_pid	machine.c	/^compare_pid(const void *p1, const void *p2)$/;"	f	file:
compare_prio	machine.c	/^compare_prio(void *arg1, void *arg2)$/;"	f
compare_res	machine.c	/^compare_res(void *arg1, void *arg2)$/;"	f
compare_size	machine.c	/^compare_size(void *arg1, void *arg2)$/;"	f
compare_swap	machine.c	/^compare_swap(const void *arg1, const void *arg2)$/;"	f	file:
compare_threads	machine.c	/^compare_threads(void *arg1, void *arg2)$/;"	f
compare_tid	machine.c	/^compare_tid(const void *p1, const void *p2)$/;"	f	file:
compare_time	machine.c	/^compare_time(void *arg1, void *arg2)$/;"	f
compare_vcsw	machine.c	/^compare_vcsw(void *arg1, void *arg2)$/;"	f
compares	machine.c	/^int (*compares[])() = {$/;"	v
copyright	top.c	/^char *copyright =$/;"	v
cp_diff	machine.c	/^static long cp_diff[CPUSTATES];$/;"	v	file:
cp_old	machine.c	/^static long cp_old[CPUSTATES];$/;"	v	file:
cp_time	machine.c	/^static long cp_time[CPUSTATES];$/;"	v	file:
cpu_states	machine.c	/^int cpu_states[CPUSTATES];$/;"	v
cpumask	machine.c	/^static u_long cpumask;$/;"	v	file:
cpustate_columns	display.c	/^static int *cpustate_columns;$/;"	v	file:
cpustate_names	display.c	/^static char **cpustate_names;$/;"	v	file:
cpustate_names	machine.h	/^    char **cpustate_names;$/;"	m	struct:statics
cpustate_total_length	display.c	/^static int cpustate_total_length;$/;"	v	file:
cpustatenames	machine.c	/^char *cpustatenames[] = {$/;"	v
cpustates	machine.h	/^    int    *cpustates;$/;"	m	struct:system_info
cpustates_column	display.c	/^static int cpustates_column;$/;"	v	file:
cpustates_tag	display.c	/^char *cpustates_tag()$/;"	f
cursor_motion	screen.c	/^char *cursor_motion;$/;"	v
d_arc	top.c	/^void (*d_arc)() = i_arc;$/;"	v
d_cpustates	top.c	/^void (*d_cpustates)() = i_cpustates;$/;"	v
d_header	top.c	/^void (*d_header)() = i_header;$/;"	v
d_loadave	top.c	/^void (*d_loadave)() = i_loadave;$/;"	v
d_memory	top.c	/^void (*d_memory)() = i_memory;$/;"	v
d_message	top.c	/^void (*d_message)() = i_message;$/;"	v
d_process	top.c	/^void (*d_process)() = i_process;$/;"	v
d_procstates	top.c	/^void (*d_procstates)() = i_procstates;$/;"	v
d_swap	top.c	/^void (*d_swap)() = i_swap;$/;"	v
debug	display.c	/^FILE *debug;$/;"	v
digits	utils.c	/^int digits(val)$/;"	f
display_header	display.c	/^display_header(t)$/;"	f
display_init	display.c	/^int display_init(statics)$/;"	f
display_resize	display.c	/^int display_resize()$/;"	f
display_updatecpus	display.c	/^int display_updatecpus(statics)$/;"	f
display_width	display.c	/^static int display_width = MAX_COLS;$/;"	v	file:
displaymode	machine.c	/^enum displaymodes displaymode;$/;"	v	typeref:enum:displaymodes
displaymodes	top.h	/^enum displaymodes { DISP_CPU = 0, DISP_IO, DISP_MAX };$/;"	g
end_screen	screen.c	/^end_screen()$/;"	f
end_standout	screen.c	/^char *end_standout;$/;"	v
enter_user	username.c	/^int enter_user(uid, name, wecare)$/;"	f
err_compar	commands.c	/^err_compar(p1, p2)$/;"	f
err_listem	commands.c	/^static char *err_listem = $/;"	v	file:
err_string	commands.c	/^char *err_string()$/;"	f
err_toomany	commands.c	/^static char *err_toomany = " too many errors occurred";$/;"	v	file:
errcnt	commands.c	/^static int errcnt;$/;"	v	file:
errmsg	utils.c	/^char *errmsg(errnum)$/;"	f
errnum	commands.c	/^    int  errnum;	\/* value of errno (that is, the actual error) *\/$/;"	m	struct:errs	file:
error_count	commands.c	/^error_count()$/;"	f
errs	commands.c	/^static struct errs errs[ERRMAX];$/;"	v	typeref:struct:errs	file:
errs	commands.c	/^struct errs		\/* structure for a system-call error *\/$/;"	s	file:
fmt	machine.c	/^static char fmt[512];	\/* static area where result is built *\/$/;"	v	file:
fmt_flags	top.c	/^static int fmt_flags = 0;$/;"	v	file:
format_header	machine.c	/^format_header(char *uname_field)$/;"	f
format_k	utils.c	/^char *format_k(amt)$/;"	f
format_k2	utils.c	/^char *format_k2(amt)$/;"	f
format_next_process	machine.c	/^format_next_process(caddr_t handle, char *(*get_userid)(int), int flags)$/;"	f
format_nice	machine.c	/^format_nice(const struct kinfo_proc *pp)$/;"	f	file:
format_time	utils.c	/^char *format_time(seconds)$/;"	f
get_io_stats	machine.c	/^get_io_stats(struct kinfo_proc *pp, long *inp, long *oup, long *flp,$/;"	f
get_io_total	machine.c	/^get_io_total(struct kinfo_proc *pp)$/;"	f
get_old_proc	machine.c	/^get_old_proc(struct kinfo_proc *pp)$/;"	f
get_process_info	machine.c	/^get_process_info(struct system_info *si, struct process_select *sel,$/;"	f
get_screensize	screen.c	/^get_screensize()$/;"	f
get_system_info	machine.c	/^get_system_info(struct system_info *si)$/;"	f
get_user	username.c	/^int get_user(uid)$/;"	f
getopt	getopt.c	/^getopt(argc, argv, opts)$/;"	f
getsysctl	machine.c	/^getsysctl(const char *name, void *ptr, size_t len)$/;"	f	file:
go_home	screen.c	/^go_home()$/;"	f
handle	machine.c	/^static struct handle handle;$/;"	v	typeref:struct:handle	file:
handle	machine.c	/^struct handle {$/;"	s	file:
hash_el	username.c	/^struct hash_el {$/;"	s	file:
hash_table	username.c	/^struct hash_el hash_table[Table_size];$/;"	v	typeref:struct:hash_el
hashit	username.c	56;"	d	file:
header_length	display.c	/^static int header_length;$/;"	v	file:
header_status	display.c	/^static enum { OFF, ON, ERASE } header_status = ON;$/;"	v	typeref:enum:__anon1	file:
home	screen.c	/^char home[15];$/;"	v
i_arc	display.c	/^i_arc(stats)$/;"	f
i_cpustates	display.c	/^i_cpustates(states)$/;"	f
i_header	display.c	/^i_header(text)$/;"	f
i_loadave	display.c	/^i_loadave(mpid, avenrun)$/;"	f
i_memory	display.c	/^i_memory(stats)$/;"	f
i_message	display.c	/^i_message()$/;"	f
i_process	display.c	/^i_process(line, thisline)$/;"	f
i_procstates	display.c	/^i_procstates(total, brkdn)$/;"	f
i_swap	display.c	/^i_swap(stats)$/;"	f
i_timeofday	display.c	/^i_timeofday(tod)$/;"	f
i_uptime	display.c	/^i_uptime(bt, tod)$/;"	f
idle	machine.h	/^    int idle;		\/* show idle processes *\/$/;"	m	struct:process_select
init_hash	username.c	/^init_hash()$/;"	f
init_screen	screen.c	/^init_screen()$/;"	f
init_termcap	screen.c	/^init_termcap(interactive)$/;"	f
intload	loadavg.h	52;"	d
intload	loadavg.h	56;"	d
io_Proc_format	machine.c	112;"	d	file:
io_header	machine.c	/^static char io_header[] =$/;"	v	file:
is_a_terminal	screen.c	/^static char is_a_terminal = No;$/;"	v	file:
is_empty_hash	username.c	50;"	d	file:
itoa	utils.c	/^char *itoa(val)$/;"	f
itoa7	utils.c	/^char *itoa7(val)$/;"	f
jail	machine.h	/^    int jail;		\/* show jail ID *\/$/;"	m	struct:process_select
jid	machine.h	/^    int jid;		\/* only this jid (unless jid == -1) *\/$/;"	m	struct:process_select
jidlength	machine.c	/^static int jidlength;$/;"	v	file:
jmp_int	top.c	/^jmp_buf jmp_int;$/;"	v
kd	machine.c	/^static kvm_t *kd;$/;"	v	file:
ki_swap	machine.c	233;"	d	file:
kidle	machine.h	/^    int kidle;		\/* show per-CPU idle threads *\/$/;"	m	struct:process_select
kill_procs	commands.c	/^char *kill_procs(str)$/;"	f
last_hi	display.c	/^static int last_hi = 0;		\/* used in u_process and u_endscreen *\/$/;"	v	file:
last_pid	machine.h	/^    int    last_pid;$/;"	m	struct:system_info
lastline	display.c	/^static int lastline = 0;$/;"	v	file:
lastpid	machine.c	/^static int lastpid;$/;"	v	file:
lcpustates	display.c	/^static int *lcpustates;$/;"	v	file:
leave	top.c	/^sigret_t leave()	\/* exit under normal conditions -- INT handler *\/$/;"	f
leaveflag	top.c	/^volatile sig_atomic_t leaveflag;$/;"	v
line_update	display.c	/^static void line_update(old, new, start, line)$/;"	f	file:
lineindex	display.c	60;"	d	file:
lmemory	display.c	/^static int *lmemory;$/;"	v	file:
lmpid	display.c	/^static int lmpid = 0;$/;"	v	file:
load_avg	loadavg.h	/^  typedef double load_avg;$/;"	t
load_avg	loadavg.h	/^  typedef fixpt_t load_avg;$/;"	t
load_avg	machine.h	/^    double load_avg[NUM_AVERAGES];$/;"	m	struct:system_info
loaddouble	loadavg.h	51;"	d
loaddouble	loadavg.h	55;"	d
logcpu	machine.c	/^static double logcpu;$/;"	v	file:
lower_left	screen.c	/^char lower_left[15];$/;"	v
lprocstates	display.c	/^static int *lprocstates;$/;"	v	file:
lswap	display.c	/^static int *lswap;$/;"	v	file:
ltotal	display.c	/^static int ltotal = 0;$/;"	v	file:
machine_init	machine.c	/^machine_init(struct statics *statics, char do_unames)$/;"	f
main	prime.c	/^main(argc, argv)$/;"	f
main	top.c	/^main(argc, argv)$/;"	f
max_topn	top.c	/^static int max_topn;		\/* maximum displayable processes *\/$/;"	v	file:
maxcpu	machine.c	/^static int maxcpu;$/;"	v	file:
maxid	machine.c	/^static int maxid;$/;"	v	file:
memcmp	os.h	10;"	d
memcpy	os.h	8;"	d
memory	machine.h	/^    int    *memory;$/;"	m	struct:system_info
memory_buffer	display.c	/^char memory_buffer[MAX_COLS];$/;"	v
memory_names	display.c	/^static char **memory_names;$/;"	v	file:
memory_names	machine.h	/^    char **memory_names;$/;"	m	struct:statics
memory_stats	machine.c	/^int memory_stats[7];$/;"	v
memorynames	machine.c	/^char *memorynames[] = {$/;"	v
memzero	os.h	27;"	d
memzero	os.h	9;"	d
msglen	display.c	/^static int msglen = 0;$/;"	v	file:
myname	top.c	/^char *myname = "top";$/;"	v
name	username.c	/^    char name[MAXLOGNAME];$/;"	m	struct:hash_el	file:
namelength	machine.c	/^static int namelength = 8;$/;"	v	file:
namelength	machine.c	/^static int namelength = TOP_USERNAME_LEN;$/;"	v	file:
ncpus	machine.c	/^static int ncpus;$/;"	v	file:
ncpus	machine.h	/^    int    ncpus;$/;"	m	struct:system_info
ncpus	machine.h	/^    int ncpus;$/;"	m	struct:statics
new_lword	screen.c	/^static int new_lword;$/;"	v	file:
new_message	display.c	/^new_message(type, msgfmt, a1, a2, a3)$/;"	f
new_settings	screen.c	/^static struct sgttyb new_settings;$/;"	v	typeref:struct:sgttyb	file:
new_settings	screen.c	/^static struct termio new_settings;$/;"	v	typeref:struct:termio	file:
new_settings	screen.c	/^static struct termios new_settings;$/;"	v	typeref:struct:termios	file:
next_field	commands.c	/^char *next_field(str)$/;"	f
next_msg	display.c	/^static char next_msg[MAX_COLS + 5];$/;"	v	file:
next_proc	machine.c	/^	struct kinfo_proc **next_proc;	\/* points to next valid proc pointer *\/$/;"	m	struct:handle	typeref:struct:handle::kinfo_proc	file:
nproc	machine.c	/^static int nproc;$/;"	v	file:
num_cpus	display.c	/^static int num_cpus;$/;"	v	file:
num_cpustates	display.c	/^static int num_cpustates;$/;"	v	file:
num_memory	display.c	/^static int num_memory;$/;"	v	file:
num_procstates	display.c	/^static int num_procstates;$/;"	v	file:
num_swap	display.c	/^static int num_swap;$/;"	v	file:
old_lword	screen.c	/^static int old_lword;$/;"	v	file:
old_settings	screen.c	/^static struct sgttyb old_settings;$/;"	v	typeref:struct:sgttyb	file:
old_settings	screen.c	/^static struct termio old_settings;$/;"	v	typeref:struct:termio	file:
old_settings	screen.c	/^static struct termios old_settings;$/;"	v	typeref:struct:termios	file:
onproc	machine.c	/^static int onproc = -1;$/;"	v	file:
optarg	getopt.c	/^char	*optarg;$/;"	v
opterr	getopt.c	/^int	opterr = 1;$/;"	v
optind	getopt.c	/^int	optind = 1;$/;"	v
optopt	getopt.c	/^int	optopt;$/;"	v
order_names	machine.h	/^    char **order_names;$/;"	m	struct:statics
ordernames	machine.c	/^char *ordernames[] = {$/;"	v
overstrike	screen.c	/^int  overstrike;$/;"	v
p_total	machine.h	/^    int    p_total;$/;"	m	struct:system_info
pageshift	machine.c	/^static int pageshift;		\/* log base 2 of the pagesize *\/$/;"	v	file:
pagetok	machine.c	230;"	d	file:
pbase	machine.c	/^static struct kinfo_proc *pbase;$/;"	v	typeref:struct:kinfo_proc	file:
pcpu	machine.c	/^static double *pcpu;$/;"	v	file:
pcpu_cp_diff	machine.c	/^static long *pcpu_cp_diff;$/;"	v	file:
pcpu_cp_old	machine.c	/^static long *pcpu_cp_old;$/;"	v	file:
pcpu_cp_time	machine.c	/^static long *pcpu_cp_time;$/;"	v	file:
pcpu_cpu_states	machine.c	/^static int *pcpu_cpu_states;$/;"	v	file:
pcpu_stats	top.c	/^int pcpu_stats = No;$/;"	v
pctcpu	loadavg.h	/^  typedef long pctcpu;$/;"	t
pctcpu	loadavg.h	/^typedef double pctcpu;$/;"	t
pctdouble	loadavg.h	43;"	d
pctdouble	loadavg.h	46;"	d
percentages	utils.c	/^long percentages(cnt, out, new, old, diffs)$/;"	f
pref	machine.c	/^static struct kinfo_proc **pref;$/;"	v	typeref:struct:kinfo_proc	file:
pref_len	machine.c	/^static int pref_len;$/;"	v	file:
previous_interval	machine.c	/^static uint64_t previous_interval = 0;$/;"	v	file:
previous_pref	machine.c	/^static struct kinfo_proc **previous_pref;$/;"	v	typeref:struct:kinfo_proc	file:
previous_proc_count	machine.c	/^static int previous_proc_count = 0;$/;"	v	file:
previous_proc_count_max	machine.c	/^static int previous_proc_count_max = 0;$/;"	v	file:
previous_procs	machine.c	/^static struct kinfo_proc *previous_procs;$/;"	v	typeref:struct:kinfo_proc	file:
previous_thread	machine.c	/^static int previous_thread;$/;"	v	file:
previous_wall_time	machine.c	/^static struct timeval previous_wall_time;$/;"	v	typeref:struct:timeval	file:
printable	display.c	/^char *printable(str)$/;"	f
proc_calc_pctcpu	machine.c	/^proc_calc_pctcpu(struct kinfo_proc *pp)$/;"	f	file:
proc_owner	machine.c	/^proc_owner(int pid)$/;"	f
proc_uptime	machine.c	/^static struct timespec proc_uptime;$/;"	v	typeref:struct:timespec	file:
proc_used_cpu	machine.c	/^proc_used_cpu(struct kinfo_proc *pp)$/;"	f	file:
proc_wall_time	machine.c	/^static struct timeval proc_wall_time;$/;"	v	typeref:struct:timeval	file:
process_select	machine.h	/^struct process_select$/;"	s
process_states	machine.c	/^int process_states[8];$/;"	v
procstate_names	display.c	/^static char **procstate_names;$/;"	v	file:
procstate_names	machine.h	/^    char **procstate_names;$/;"	m	struct:statics
procstatenames	machine.c	/^char *procstatenames[] = {$/;"	v
procstates	machine.h	/^    int    *procstates;$/;"	m	struct:system_info
procstates_buffer	display.c	/^static char procstates_buffer[MAX_COLS];$/;"	v	file:
ps	top.c	/^struct process_select ps;$/;"	v	typeref:struct:process_select
putcap	screen.h	9;"	d
putstdout	screen.c	/^putstdout(ch)$/;"	f
quit	top.c	/^void quit(status)		\/* exit under duress *\/$/;"	f
readline	display.c	/^readline(buffer, size, numeric)$/;"	f
reinit_screen	screen.c	/^reinit_screen()$/;"	f
remaining	machine.c	/^	int remaining;			\/* number of pointers remaining *\/$/;"	m	struct:handle	file:
renice_procs	commands.c	/^char *renice_procs(str)$/;"	f
reset_display	top.c	/^reset_display()$/;"	f
scanint	commands.c	/^scanint(str, intp)$/;"	f
screen_length	screen.c	/^int  screen_length;$/;"	v
screen_width	screen.c	/^int  screen_width;$/;"	v
screenbuf	display.c	/^char *screenbuf = NULL;$/;"	v
self	machine.h	/^    int self;		\/* show self *\/$/;"	m	struct:process_select
setbuffer	os.h	23;"	d
show_errors	commands.c	/^show_errors()$/;"	f
show_help	commands.c	/^show_help()$/;"	f
sigret_t	os.h	/^  typedef int sigret_t;$/;"	t
sigret_t	os.h	/^  typedef void sigret_t;$/;"	t
smart_terminal	screen.c	/^char smart_terminal;$/;"	v
smp_Proc_format	machine.c	120;"	d	file:
smp_header	machine.c	/^static char smp_header[] =$/;"	v	file:
smp_header_thr	machine.c	/^static char smp_header_thr[] =$/;"	v	file:
smpmode	machine.c	/^static int smpmode;$/;"	v	file:
sorted_state	machine.c	/^static int sorted_state[] = {$/;"	v	file:
standout	screen.c	/^standout(msg)$/;"	f
start_standout	screen.c	/^char *start_standout;$/;"	v
state_abbrev	machine.c	/^char *state_abbrev[] = {$/;"	v
statics	machine.h	/^struct statics$/;"	s
stdoutbuf	top.c	/^char stdoutbuf[Buffersize];$/;"	v
str_addarg	commands.c	/^str_addarg(str, len, arg, first)$/;"	f	file:
str_adderr	commands.c	/^str_adderr(str, len, err)$/;"	f	file:
strchr	os.h	6;"	d
strecpy	utils.c	/^char *strecpy(to, from)$/;"	f
string_buffer	screen.c	/^char string_buffer[1024];$/;"	v
string_count	display.c	/^static int string_count(pp)$/;"	f	file:
string_index	utils.c	/^int string_index(string, array)$/;"	f
strrchr	os.h	7;"	d
summary_format	display.c	/^static void summary_format(str, numbers, names)$/;"	f	file:
swap	machine.h	/^    int    *swap;$/;"	m	struct:system_info
swap_buffer	display.c	/^char swap_buffer[MAX_COLS];$/;"	v
swap_names	display.c	/^static char **swap_names;$/;"	v	file:
swap_names	machine.h	/^    char **swap_names;$/;"	m	struct:statics
swap_stats	machine.c	/^int swap_stats[7];$/;"	v
swaplength	machine.c	/^static int swaplength;$/;"	v	file:
swapmode	machine.c	/^swapmode(int *retavail, int *retfree)$/;"	f	file:
swapnames	machine.c	/^char *swapnames[] = {$/;"	v
swappgsin	machine.c	/^static int swappgsin = -1;$/;"	v	file:
swappgsout	machine.c	/^static int swappgsout = -1;$/;"	v	file:
system	machine.h	/^    int system;		\/* show system processes *\/$/;"	m	struct:process_select
system_info	machine.h	/^struct system_info$/;"	s
termcap_buf	screen.c	/^char termcap_buf[1024];$/;"	v
terminal_end	screen.c	/^char *terminal_end;$/;"	v
terminal_init	screen.c	/^char *terminal_init;$/;"	v
thread	machine.h	/^    int thread;		\/* show threads *\/$/;"	m	struct:process_select
times	machine.c	/^static long *times;$/;"	v	file:
toggle_pcpustats	machine.c	/^toggle_pcpustats(void)$/;"	f
total_inblock	machine.c	/^static long total_inblock;$/;"	v	file:
total_majflt	machine.c	/^static long total_majflt;$/;"	v	file:
total_oublock	machine.c	/^static long total_oublock;$/;"	v	file:
trim_header	display.c	/^trim_header(text)$/;"	f
tstop	top.c	/^sigret_t tstop(i)	\/* SIGTSTP handler *\/$/;"	f
tstopflag	top.c	/^volatile sig_atomic_t tstopflag;$/;"	v
u_arc	display.c	/^u_arc(stats)$/;"	f
u_cpustates	display.c	/^u_cpustates(states)$/;"	f
u_endscreen	display.c	/^u_endscreen(hi)$/;"	f
u_header	display.c	/^u_header(text)$/;"	f
u_loadave	display.c	/^u_loadave(mpid, avenrun)$/;"	f
u_memory	display.c	/^u_memory(stats)$/;"	f
u_message	display.c	/^u_message()$/;"	f
u_process	display.c	/^u_process(line, newline)$/;"	f
u_procstates	display.c	/^u_procstates(total, brkdn)$/;"	f
u_swap	display.c	/^u_swap(stats)$/;"	f
uid	machine.h	/^    int uid;		\/* only this uid (unless uid == -1) *\/$/;"	m	struct:process_select
uid	username.c	/^    int  uid;$/;"	m	struct:hash_el	file:
up_Proc_format	machine.c	128;"	d	file:
up_header	machine.c	/^static char up_header[] =$/;"	v	file:
up_header_thr	machine.c	/^static char up_header_thr[] =$/;"	v	file:
update_layout	machine.c	/^update_layout(void)$/;"	f	file:
userid	username.c	/^int userid(username)$/;"	f
username	username.c	/^char *username(uid)$/;"	f
version	version.c	/^static char version[16];$/;"	v	file:
version_string	version.c	/^char *version_string()$/;"	f
wcpu	machine.h	/^    int wcpu;		\/* show weighted cpu *\/$/;"	m	struct:process_select
weighted_cpu	machine.c	91;"	d	file:
winch	top.c	/^sigret_t winch(i)		\/* SIGWINCH handler *\/$/;"	f
winchflag	top.c	/^volatile sig_atomic_t winchflag;$/;"	v
x_arc	display.c	/^int  x_arc =		5;$/;"	v
x_brkdn	display.c	/^int  x_brkdn =		15;$/;"	v
x_header	display.c	/^int  x_header =		0;$/;"	v
x_idlecursor	display.c	/^int  x_idlecursor =	0;$/;"	v
x_lastpid	display.c	/^int  x_lastpid =	10;$/;"	v
x_loadave	display.c	/^int  x_loadave =	33;$/;"	v
x_loadave_nompid	display.c	/^int  x_loadave_nompid =	15;$/;"	v
x_mem	display.c	/^int  x_mem =		5;$/;"	v
x_procstate	display.c	/^int  x_procstate =	0;$/;"	v
x_swap	display.c	/^int  x_swap =		6;$/;"	v
y_arc	display.c	/^int  y_arc =		4;$/;"	v
y_brkdn	display.c	/^int  y_brkdn =		1;$/;"	v
y_cpustates	display.c	/^int  y_cpustates =	2;$/;"	v
y_header	display.c	/^int  y_header =		6;$/;"	v
y_idlecursor	display.c	/^int  y_idlecursor =	5;$/;"	v
y_lastpid	display.c	/^int  y_lastpid =	0;$/;"	v
y_loadave	display.c	/^int  y_loadave =	0;$/;"	v
y_mem	display.c	/^int  y_mem =		3;$/;"	v
y_message	display.c	/^int  y_message =	5;$/;"	v
y_procs	display.c	/^int  y_procs =		7;$/;"	v
y_procstate	display.c	/^int  y_procstate =	1;$/;"	v
y_swap	display.c	/^int  y_swap =		4;$/;"	v
z_cpustates	display.c	/^z_cpustates()$/;"	f

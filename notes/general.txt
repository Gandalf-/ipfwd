>>>
general notes on the project
<<<

references:
  - IPFW Man Page
    - https://www.freebsd.org/cgi/man.cgi?ipfw
  - IPFW FreeBSD Handbook
    - https://www.freebsd.org/doc/handbook/firewalls-ipfw.html

considerations:
  - need to consider what to about packet retransmissions, what if we drop a
    packet because it's bad, then it gets' retransmitted
  - not necessarily effective for stopping incoming attacks, since they can
    keep pushing until all the packets make it through

what is the project?
  - moved to top level README.md

future work:
  - i think more could be done to optimize IPFW rule sets themselves. since IPFW
    uses a first match wins policy, ordering rules in terms of granularity
    could produce performance improvements. at the moment, it's up to the
    system administrators to create rulesets that follow this pattern. it's
    possible that this could be automated by understanding rule types and
    sorting them

notes: general
  - IPFW is maintined with FreeBSD, it's PF that's from OpenBSD
  - working on FreeBSD 11.0 Release
  - focus is on performance, what the system does with the packets is not in
    the scope of the project
  - hostnames in rules are resolved when they're added
  - the development part might be pretty easy, focus should be on analysis
    - how is this better
    - how is this worse
  - dynamic rules are useful for allowing return traffic after a packet goes
    out from the internal network. Works for UPD and TCP
  - pipes/dummynet can limit bandwidth

  - freebsd network stack parallelization
    - https://wiki.freebsd.org/200805DevSummit?action=AttachFile&do=get&target=20080515-stack-parallelism.pdf
  - IPFW modernization project
    - https://wiki.freebsd.org/IpfwNg

notes: performance
  - IPFW high performance alternative?
    - http://caia.swin.edu.au/urp/diffuse/
  - https://wiki.freebsd.org/NetworkPerformanceTuning

notes: Isilon
  - Isilon IPFW configurations
    - http://opengrok.west.isilon.com/source/xref/BR_HP_DEV/isilon/bin/isi_flexnet_d/sbr.c#363

    - "Thereâ€™s a workaround for an access zone bug that wants to add more rules."
    - See the patch in https://bugs.west.isilon.com/show_bug.cgi?id=105297

questions
  - what happens if we get DDOS'd? How do we prevent being taken advantage of
    because of the back off?
    - we could have a minimal percentage of packets that we will always check.
      inherently though, the more traffic there is, the easier that it will be
      for malicious traffic to get through.
    - this is a valid concern, but an inherent part of the trade off between
      policy enforcement and performance that you're buying by using IPFWD

  - what questions will people at the conference have?
    - what kind of performance gains do you get?

    - what should you do when you find out there have been policy violations
      and some more violations likely got through without you noticing?

  - how would this work on a public system? eg one on an outward facing network
    instead of backend?
    - there's greater risk of violations causing harm, particularly if outside
      packets can reach protected/ vulnerable internal services. some
      adversaries may not care about being detected and won't be deterred by
      the possibility of detection (if they're aware the target system is using
      IPFWD)

  - how is this better than stock IPFW?
    - it allows you to reduce the system resource cost of having a firewall
      enabled in a high bandwidth environment without sacrificing all of them
      benefits.

  - how is this worse than stock IPFW?
    - you no longer have any guarantee that IPFW is going to stop everything
      you specified in your firewall rules. you're no longer enforcing your
      security policy per se, but instead being notified when it's being 
      violated, potentially some time after the first violation occurred.
      there's also the chance that violations may never be detected

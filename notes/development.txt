# vim: syntax=markdown:

>>>
notes on development work, design decisions and resources for working with the
code base
<<<

!!!

development cycle
  - makefile for ipfw itself in /sys/modules/ipfw

questions:

notes: general
  - could turn off IPFW entirely is load is high enough

  - we only need to designate the very first rule to be managed by ipfwd and
    update that one to: prob %% allow ip from any to any

  - IPFW is composed of two parts: a userland utility for controlling firewall
    functionality and a kernel-level packet filter engine. 
    - kernel level packet filtering engine
      - svnweb.freebsd.org/base/head/sys/netpfil/ipfw 
    - userland utility 
      - https://svnweb.freebsd.org/base/head/sbin/ipfw/

  - could have daemon that periodically reruns
    - " ipfw add 100 set 1 prob % allow"
    - or set a sysctl value. IPFW already has a lot of sysctl values it works
      with
      - eg: net.inet.ip.*
  
  - https://github.com/Gandalf-/ipfwd

notes: droplets
  - righty
    - freebsd : rightyrighty
  - lefty
    - freebsd : leftylefty
    
notes: workstations
  - lefty
    - cf418-nel-01:922
    - 140.160.139.125 -> 78:2b:cb:96:b8:73
    - root:leftylefty!
    
  - righty
    - cf418-nel-02:922
    - 140.160.139.126 -> 78:2b:cb:9b:de:32
    - root:rightyrighty!

example ruleset
- first allow,deny ends the search, so having a prob % allow will let us get
  the probabilistic "just match and move on" that we want

  ipfw add   1 set 1 prob 0.5 allow
  ipfw add 101 set 2 deny ip from not 1.2.3.4 to any
  ...
